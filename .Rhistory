library(tsfknn)
# Utility function for RBF similarity
rbf <- function(x, y, sigma = 1)
{
exp(- sigma * (x - y) ^ 2)
}
debug(predict_kcde)
source('~/KCDE_new/prediction.R', echo=TRUE)
library(quantmod)
Lag(ts,1)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix
design_matrix_complete <- design_matrix[complete.cases(design_matrix)]
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix_complete
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix_complete
source('~/KCDE_new/prediction.R', echo=TRUE)
rbf(design_matrix_complete,y)
similarities <- rowSums(rbf(design_matrix_complete,y))
similarities
names(similarities) <- 1:length(similarities)
similarities
sort(similarities)
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
top_k_similar_ys <-as.numeric(names(top_k_similar))
top_k_similar_ys
top_k_similar
similarities
ts
top_k_similar
ts[top_k_similar_ys+h]
top_k_similar_ys
h
top_k_similar_ys
top_k_similar
similarities <- rowSums(rbf(design_matrix_complete,y))/sum(rowSums(rbf(design_matrix_complete,y)))
names(similarities) <- 1:length(similarities)
top_k_similar <- tail(sort(similarities),k)
top_k_similar_ys <-as.numeric(names(top_k_similar))
pred_density <- sample(ts[top_k_similar_ys+h],1000,prob=top_k_similar)
pred_density <- sample(ts[top_k_similar_ys+h],1000,prob=top_k_similar,replace=T)
pred_density
hist(pred_density)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
debug(predict_kcde)
predict_kcde(1:10,2,1,4,1)
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
similarities
top_k_similar
design_matrix_complete
diff_in_rows <- nrow(design_matrix_complete) - nrow(design_matrix)
source('~/KCDE_new/prediction.R', echo=TRUE)
diff_in_rows
source('~/KCDE_new/prediction.R', echo=TRUE)
diff_in_rows
nrow(design_matrix_complete)
length(ts)
diff_in_rows
source('~/KCDE_new/prediction.R', echo=TRUE)
length(ts)
ts
design_matrix_complete
pred_density
ts[top_k_similar_ys+h]
top_k_similar
top_k_similar_ys
ts[top_k_similar_ys+h]
design_matrix_complete
y
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
ts[top_k_similar_ys+h]
top_k_similar
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
flu <-read.csv("/Users/gcgibson/cdcfluforecasts/data/flu_data.rdata")
flu <-read("/Users/gcgibson/cdcfluforecasts/data/flu_data.rdata")
flu <-read.csv("/Users/gcgibson/cdcfluforecasts/data-raw/flu_data.csv")
flu$region
flu_nat <-flu[flu$region=="National",]$weighted_ili
flu_nat
plot(flu_nat)
#debug(predict_kcde)
hist(predict_kcde(flu_nat,3,1,4,1))
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
#debug(predict_kcde)
hist(predict_kcde(flu_nat,20,1,4,1))
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
tail(flu_nat)
#debug(predict_kcde)
mean(hist(predict_kcde(flu_nat,30,1,4,1)))
mean(predict_kcde(flu_nat,30,1,4,1))
#debug(predict_kcde)
hist(predict_kcde(flu_nat,30,1,4,1))
periodic_kernel <- function(x, center, period, bw, ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (results)
}
periodic_kernel <- function(x, center, period, bw, ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (results)
}
source('~/KCDE_new/prediction.R', echo=TRUE)
periodic_kernel <- function(x, center, period, bw, ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (results)
}
periodic_kernel <- function(x, center, period, bw, ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (results)
}
periodic_kernel <- function(x, center, period, bw, ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (results)
}
periodic_kernel <- function(x, center, period, bw ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (results)
}
periodic_kernel(10,1,52,1)
periodic_kernel <- function(x, center, period, bw ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (result)
}
periodic_kernel(10,1,52,1)
flu_nat_week <-flu[flu$region=="National",]$week
flu_nat_week
source('~/KCDE_new/prediction.R', echo=TRUE)
#debug(predict_kcde)
hist(predict_kcde(flu_nat,30,1,4,1,flu_nat_week))
source('~/KCDE_new/prediction.R', echo=TRUE)
#debug(predict_kcde)
hist(predict_kcde(1:100,30,1,4,1,flu_nat_week))
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix_complete
diff_in_rows
ts
source('~/KCDE_new/prediction.R', echo=TRUE)
ts
similarities
y
design_matrix_complete
y
ts[top_k_similar_ys+h]
ts[top_k_similar_ys+h]
top_k_similar
top_k_similar_ys
similarities
design_matrix_complete
source('~/KCDE_new/prediction.R', echo=TRUE)
similarities
design_matrix_complete
y
source('~/KCDE_new/prediction.R', echo=TRUE)
similarities
top_k_similar
top_k_similar_ys
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
top_k_similar
similarities
top_k_similar
similarities
ts[top_k_similar_ys+h]
top_k_similar_ys
h
ts
length(Ts)
length(ts)
ts[top_k_similar_ys+h]
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
ts[top_k_similar_ys+h]
top_k_similar
similarities
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar
top_k_similar
hist(predict_kcde(rep(1:4,10),5,1,4,1,flu_nat_week))
#debug(predict_kcde)
hist(predict_kcde(rep(1:4,10),5,1,4,1,flu_nat_week))
source('~/KCDE_new/prediction.R', echo=TRUE)
rep(1:4,10)
#debug(predict_kcde)
hist(predict_kcde(rep(1:4,10),5,1,4,.1,flu_nat_week))
#debug(predict_kcde)
hist(predict_kcde(rep(1:4,10),5,1,4,.01,flu_nat_week))
mean(predict_kcde(rep(1:4,10),5,1,4,.01,flu_nat_week))
source('~/KCDE_new/prediction.R', echo=TRUE)
similarities
top_k_similar
ts[top_k_similar_ys+h]
top_k_similar_ys
ts[top_k_similar_ys+h]
ts
top_k_similar_ys
top_k_similar_ys
top_k_similar_ys+h
top_k_similar_ys
y
mean(predict_kcde(rep(1:4,10),5,1,1,.01,flu_nat_week))
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix_complete
#hist(predict_kcde(rep(1:4,10),5,1,4,.1,flu_nat_week))
mean(predict_kcde(rep(1:4,10),5,1,4,.01,flu_nat_week))
similarities
top_k_similar
top_k_similar_ys
top_k_similar_ys
similarities
similarities
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
ts
ts[35]
similarities
design_matrix_complete
y
source('~/KCDE_new/prediction.R', echo=TRUE)
similarities
top_k_similar_ys
ts[35]
design_matrix_complete
y
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix_complete
source('~/KCDE_new/prediction.R', echo=TRUE)
rev(Lag(ts,i))
design_matrix
design_matrix
u
i
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
similarities
design_matrix_complete
y
design_matrix_complete
similarities
design_matrix_complete
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix
t
ts
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix_complete
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix_complete
design_matrix
design_matrix_complete
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix_complete
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix
design_matrix
similarities
top_k_similar_ys
t[36]
ts[56]
ts[36]
design_matrix[36,]
ts
length(ts)
nrow(design_matrix_complete)
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
ts[36]
ts[top_k_similar_ys+h]
length(ts)
nrow(design_matrix_complete)
design_matrix_complete[36,]
top_k_similar
y
design_matrix_complete
y
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
ts[37]
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
similarities
source('~/KCDE_new/prediction.R', echo=TRUE)
predict_kcde(rep(1:4,10),1,1,4,.01,flu_nat_week)
source('~/KCDE_new/prediction.R', echo=TRUE)
ts[top_k_similar_ys+h]
top_k_similar_ys+h
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
ts[top_k_similar_ys+h]
source('~/KCDE_new/prediction.R', echo=TRUE)
ts
ts
lenght(ts)
length(ts)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
ts[top_k_similar_ys+h]
similarities
design_matrix_complete
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix_complete
source('~/KCDE_new/prediction.R', echo=TRUE)
test_x
similarities
design_matrix_complete
test_x
similarities
rbf(c(1,2,3,4))
rbf(c(1,2,3,4),c(1,2,3,4))
rbf(c(1,2,3,4),c(1,3,2,4))
rbf(design_matrix_complete,test_x,sigma = sigma)
sim_mat <- apply(design_matrix_complete,1,function(x){rbf(x,test_x,sigma = sigma)})
design_matrix_complete <- design_matrix[complete.cases(design_matrix),]
source('~/KCDE_new/prediction.R', echo=TRUE)
sim_mat
similarities
dim()
dim(sim_mat)
source('~/KCDE_new/prediction.R', echo=TRUE)
similarities
tail(sort(similarities),k)
similarities <- similarities[1:(length(similarities)-num_lags)]
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar
ts[top_k_similar_ys+h]
top_k_similar
ts[33]
sim_mat
similarities
ts[1]
design_matrix_complete
top_k_similar_ys
top_k_similar_ys+4+1
ts[top_k_similar_ys+4+1]
top_k_similar_ys
ts[top_k_similar_ys]
ts[top_k_similar_ys]
ts[top_k_similar_ys+num_lags-1]
ts[top_k_similar_ys+num_lags-1+h]
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
#debug(predict_kcde)
#hist(predict_kcde(rep(1:4,10),5,1,4,.1,flu_nat_week))
mean(predict_kcde(c(rep(1:4,10),1),1,1,4,.1,flu_nat_week))
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
test_x
similarities
top_k_similar_ys
ts[top_k_similar_ys]
ts[top_k_similar_ys+num_lags-1+h]
top_k_similar
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar
ts[top_k_similar_ys+num_lags-1+h]
?sample
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
#debug(predict_kcde)
hist(predict_kcde(flu_nat_week,5,1,4,.1,flu_nat_week))
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
#debug(predict_kcde)
pred_dist <- predict_kcde(flu_nat,10,1,4,10,flu_nat_week)
hist(pred_dist)
mean(pred_dist)
var(pred_dist)
#debug(predict_kcde)
pred_dist <- predict_kcde(rep(1:4,10),10,1,4,10,flu_nat_week)
hist(pred_dist)
mean(pred_dist)
var(pred_dist)
tmp <- 1:10
tmp[-2]
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
loo_cv(rep(1:4,10),10,1,4,flu_nat_week))
debug(loo_cv)
loo_cv(rep(1:4,10),10,1,4,flu_nat_week)
source('~/KCDE_new/prediction.R', echo=TRUE)
pred_i
hist(pred_i)
source('~/KCDE_new/prediction.R', echo=TRUE)
mse
mean(pred_i)
mse[i] <- (mean(pred_i)-ts[i])^2
source('~/KCDE_new/prediction.R', echo=TRUE)
mse
source('~/KCDE_new/prediction.R', echo=TRUE)
mse
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
#debug(loo_cv)
print(loo_cv(flu_nat,10,1,4,flu_nat_week))
source('~/KCDE_new/prediction.R', echo=TRUE)
mse
print(loo_cv(head(flu_nat,100),10,1,4,flu_nat_week))
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
devtools::install_github("HIDDA/forecasting", dependencies = TRUE, build_vignettes = TRUE)
library(HIDDA.forecasting)
HIDDA.forecasting::CHILI
library("HIDDA.forecasting")
library("ggplot2")
source("setup.R", local = TRUE)  # define test periods (OWA, TEST)
system.file("doc", "setup.R", package = "HIDDA.forecasting")
source("setup.R", local = TRUE)  # define test periods (OWA, TEST)
source("setup.R", local = TRUE)  # define test periods (OWA, TEST)
system.file("doc", "setup.R", package = "HIDDA.forecasting")
system.file("doc", "setup.R", package = "HIDDA.forecasting")
devtools::install_github("HIDDA/forecasting", dependencies = TRUE, build_vignettes = TRUE)
devtools::install_github("HIDDA/forecasting", dependencies = TRUE, build_vignettes = TRUE)
devtools::install_github("HIDDA/forecasting", dependencies = TRUE, build_vignettes = TRUE,force=TRUE)
library("HIDDA.forecasting")
library("ggplot2")
system.file("doc", "setup.R", package = "HIDDA.forecasting")
source("setup.R", local = TRUE)  # define test periods (OWA, TEST)
browseVignettes("HIDDA.forecasting")
library("HIDDA.forecasting")
browseVignettes("HIDDA.forecasting")
system.file("doc", "setup.R", package = "HIDDA.forecasting")
