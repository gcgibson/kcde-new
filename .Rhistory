library(tsfknn)
# Utility function for RBF similarity
rbf <- function(x, y, sigma = 1)
{
exp(- sigma * (x - y) ^ 2)
}
debug(predict_kcde)
source('~/KCDE_new/prediction.R', echo=TRUE)
library(quantmod)
Lag(ts,1)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix
design_matrix_complete <- design_matrix[complete.cases(design_matrix)]
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix_complete
source('~/KCDE_new/prediction.R', echo=TRUE)
design_matrix_complete
source('~/KCDE_new/prediction.R', echo=TRUE)
rbf(design_matrix_complete,y)
similarities <- rowSums(rbf(design_matrix_complete,y))
similarities
names(similarities) <- 1:length(similarities)
similarities
sort(similarities)
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
top_k_similar_ys <-as.numeric(names(top_k_similar))
top_k_similar_ys
top_k_similar
similarities
ts
top_k_similar
ts[top_k_similar_ys+h]
top_k_similar_ys
h
top_k_similar_ys
top_k_similar
similarities <- rowSums(rbf(design_matrix_complete,y))/sum(rowSums(rbf(design_matrix_complete,y)))
names(similarities) <- 1:length(similarities)
top_k_similar <- tail(sort(similarities),k)
top_k_similar_ys <-as.numeric(names(top_k_similar))
pred_density <- sample(ts[top_k_similar_ys+h],1000,prob=top_k_similar)
pred_density <- sample(ts[top_k_similar_ys+h],1000,prob=top_k_similar,replace=T)
pred_density
hist(pred_density)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
debug(predict_kcde)
predict_kcde(1:10,2,1,4,1)
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
similarities
top_k_similar
design_matrix_complete
diff_in_rows <- nrow(design_matrix_complete) - nrow(design_matrix)
source('~/KCDE_new/prediction.R', echo=TRUE)
diff_in_rows
source('~/KCDE_new/prediction.R', echo=TRUE)
diff_in_rows
nrow(design_matrix_complete)
length(ts)
diff_in_rows
source('~/KCDE_new/prediction.R', echo=TRUE)
length(ts)
ts
design_matrix_complete
pred_density
ts[top_k_similar_ys+h]
top_k_similar
top_k_similar_ys
ts[top_k_similar_ys+h]
design_matrix_complete
y
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
top_k_similar_ys
ts[top_k_similar_ys+h]
top_k_similar
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
flu <-read.csv("/Users/gcgibson/cdcfluforecasts/data/flu_data.rdata")
flu <-read("/Users/gcgibson/cdcfluforecasts/data/flu_data.rdata")
flu <-read.csv("/Users/gcgibson/cdcfluforecasts/data-raw/flu_data.csv")
flu$region
flu_nat <-flu[flu$region=="National",]$weighted_ili
flu_nat
plot(flu_nat)
#debug(predict_kcde)
hist(predict_kcde(flu_nat,3,1,4,1))
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
#debug(predict_kcde)
hist(predict_kcde(flu_nat,20,1,4,1))
source('~/KCDE_new/prediction.R', echo=TRUE)
source('~/KCDE_new/prediction.R', echo=TRUE)
tail(flu_nat)
#debug(predict_kcde)
mean(hist(predict_kcde(flu_nat,30,1,4,1)))
mean(predict_kcde(flu_nat,30,1,4,1))
#debug(predict_kcde)
hist(predict_kcde(flu_nat,30,1,4,1))
periodic_kernel <- function(x, center, period, bw, ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (results)
}
periodic_kernel <- function(x, center, period, bw, ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (results)
}
source('~/KCDE_new/prediction.R', echo=TRUE)
periodic_kernel <- function(x, center, period, bw, ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (results)
}
periodic_kernel <- function(x, center, period, bw, ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (results)
}
periodic_kernel <- function(x, center, period, bw, ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (results)
}
periodic_kernel <- function(x, center, period, bw ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (results)
}
periodic_kernel(10,1,52,1)
periodic_kernel <- function(x, center, period, bw ) {
result <- -0.5 * (sin(period * (as.vector(as.matrix(x)) - as.vector(as.matrix(center)))) / bw)^2
return (result)
}
periodic_kernel(10,1,52,1)
flu_nat_week <-flu[flu$region=="National",]$week
flu_nat_week
